// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'com.github.ben-manes.versions'

buildscript {
    ext {
        // Plugin versions
        androidGradleVersion = "3.2.0-alpha02"
        gradleVersionsVersion = "0.17.0"
        kotlinVersion = "1.2.21"
        // Project configuration
        projectMinSdkVersion = 16
        projectTargetSdkVersion = 27
        projectCompileSdkVersion = 27
        projectBuildTools = "27.0.3"
        // Dependencies - Test
        assertjVersion = "3.9.0"
        junitVersion = "4.12"
        mockitoVersion = "2.15.0"
        robolectricVersion = "3.7"
        // Dependencies - Runtime
        androidArchitectureVersion = "1.0.0"
        kotlinLoggingVersion = "1.5.3"
        rxandroidVersion = "2.0.1"
        rxjavaVersion = "2.1.9"
        rxkotlinVersion = "2.2.0"
        slf4jVersion = "1.7.25"
        slf4jAndroidLoggerVersion = "1.0.5"
        supportLibVersion = "27.0.2"
    }
    repositories {
        google()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2" }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$androidGradleVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.github.ben-manes:gradle-versions-plugin:$gradleVersionsVersion"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

apply from: rootProject.file('gradle/versioning.gradle')

allprojects {
    group "de.psdev.devdrawer"
    version enhancedVersion(2, 0, 1)

    repositories {
        google()
        mavenCentral()
        jcenter()
    }

    project.ext {
        // Project versions
        gitHash = gitScmVersion()
        appVersionName = project.version
        appVersionCode = buildVersionCode()
    }
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { selection ->
            boolean rejected = ['jre'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.5.1'
    distributionType = "all"
}